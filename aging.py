import pandas as pd
from scipy.stats import norm


# Takes an age integer and returns the appropriate key in the model-data dictionaries
def age_bucket_mapper(age):
    if 24 <= age < 35:
        return str(float(age))
    else:
        if age < 22:
            return "22-"
        elif 22 <= age < 24:
            return "22-24"
        elif 35 <= age <= 38:
            return "35-38"
        elif age > 38:
            return "38+"


# Takes an war float and returns the appropriate key in the model-data dictionaries
def war_bucket_mapper(war):
    if war < 0:
        return "neg"
    elif 0 <= war <= 1:
        return "0-1"
    elif 1 < war <= 2:
        return "1-2"
    elif 2 < war <= 4:
        return "2-4"
    elif 4 < war <= 7:
        return "4-7"
    elif war > 7:
        return "7+"


# Loading career war data into dataframes
batting_df = pd.read_csv('Aging Data/Batters_WAR_by_Age.csv')
pitching_df = pd.read_csv('Aging Data/Pitchers_WAR_by_Age.csv')

# Initializing dictionaries to hold model parameters
progression_data_b = {}
progression_data_p = {}
age_buckets = ["22-", "22-24", "35-38", "38+"]
war_buckets = ["neg", "0-1", "1-2", "2-4", "4-7", "7+"]

for bucket1 in age_buckets:
    progression_data_b[bucket1] = {}
    progression_data_p[bucket1] = {}
    for bucket2 in war_buckets:
        progression_data_b[bucket1][bucket2] = []
        progression_data_p[bucket1][bucket2] = []

for i in range(24, 35):
    progression_data_b[str(float(i))] = {}
    progression_data_p[str(float(i))] = {}
    for bucket2 in war_buckets:
        progression_data_b[str(float(i))][bucket2] = []
        progression_data_p[str(float(i))][bucket2] = []


# Calculates change in WAR by age and war category, and stores the data in dictionary
def find_deltas_by_age(df, batting):
    if batting:
        tmp_progressions = progression_data_b
    else:
        tmp_progressions = progression_data_p
    for i in range(len(df) - 1):
        age1 = float(df.loc[i, "Age"])
        age2 = float(df.loc[i+1, "Age"])
        war1 = float(df.loc[i, "WAR"])
        war2 = float(df.loc[i+1, "WAR"])
        if age1 == age2 - 1 and -12 < war2 - war1 < 12:
            age_bucket = age_bucket_mapper(age2)
            war_bucket = war_bucket_mapper(war1)
            tmp_progressions[age_bucket][war_bucket].append(war2 - war1)

    return tmp_progressions


# Fits change in war data to a normal distribution for each age/war category stores parameters
def get_model_parameters(deltas):
    parameters_by_year = {}
    for key1 in deltas.keys():
        parameters_by_year[key1] = {}
        for key2 in deltas[key1].keys():
            if len(deltas[key1][key2]) > 1:
                mu, std = norm.fit(deltas[key1][key2])
                parameters_by_year[key1][key2] = (mu, std)
            else:
                parameters_by_year[key1][key2] = 0, 1
    return parameters_by_year


# Runs the functions above and returns the dictionaries containing model parameters
def getmodels():
    batting_deltas = find_deltas_by_age(batting_df, True)
    batting_models = get_model_parameters(batting_deltas)

    pitching_deltas = find_deltas_by_age(pitching_df, False)
    pitching_models = get_model_parameters(pitching_deltas)
    return batting_models, pitching_models


batting_models = {'22-': {'neg': (1.3794117647058821, 2.435615565599589), '0-1': (0.7902439024390243, 1.9356482342752939), '1-2': (1.0166666666666666, 2.2214234675590836), '2-4': (-0.15714285714285717, 2.2063914578574044), '4-7': (-0.8600000000000001, 2.700074073057997), '7+': (-2.65, 1.0500000000000003)}, '22-24': {'neg': (0.9512195121951219, 1.4799948282517053), '0-1': (0.3357366771159875, 1.2396690349609432), '1-2': (0.6893939393939394, 2.10555749386315), '2-4': (0.10724637681159413, 2.1760434006075), '4-7': (-0.40645161290322585, 2.3475361804722907), '7+': (-0.33750000000000024, 1.8309406735336895)}, '35-38': {'neg': (0.4382899628252788, 0.8238896174823214), '0-1': (-0.09135802469135802, 0.9728153785314093), '1-2': (-0.49782608695652175, 1.6979300010880405), '2-4': (-1.2329608938547485, 1.6008299710575364), '4-7': (-2.050769230769231, 1.7786012721256839), '7+': (-1.5666666666666669, 2.2754730887834684)}, '38+': {'neg': (0.538888888888889, 0.9588605635059321), '0-1': (-0.21568627450980396, 0.8318117596770925), '1-2': (-1.1192307692307693, 1.1786626159042193), '2-4': (-1.736666666666667, 1.4547584755629446), '4-7': (0, 1), '7+': (-4.3, 5.7)}, '24.0': {'neg': (0.874329501915709, 1.230204181512198), '0-1': (0.29185393258426967, 1.3323612312636623), '1-2': (0.5337349397590362, 2.0613644509456805), '2-4': (-0.20694444444444438, 2.0084077710194608), '4-7': (-1.1800000000000002, 2.6033824152436766), '7+': (-3.0249999999999995, 1.6626409714667807)}, '25.0': {'neg': (0.7480769230769231, 1.2364525802042832), '0-1': (0.28729016786570744, 1.2649893961600365), '1-2': (0.40727272727272723, 1.9165171579009994), '2-4': (-0.3136690647482015, 2.0341756833237743), '4-7': (-0.8727272727272728, 2.047877352990789), '7+': (-1.5083333333333335, 2.0922309995685358)}, '26.0': {'neg': (0.7475806451612902, 1.1473295579144207), '0-1': (0.2550438596491228, 1.2269706661612538), '1-2': (0.11830985915492953, 1.6614782031312543), '2-4': (-0.2710059171597633, 2.0820278135829584), '4-7': (-1.1927083333333333, 2.2058749582868975), '7+': (-3.0352941176470587, 1.7469102729476702)}, '27.0': {'neg': (0.6543130990415336, 1.1513246674280957), '0-1': (0.18284424379232506, 1.1586456017124231), '1-2': (-0.0963855421686747, 1.6178928571263205), '2-4': (-0.32359550561797756, 2.0251243530640433), '4-7': (-1.5999999999999999, 2.120162191743416), '7+': (-2.4444444444444446, 2.243564183818591)}, '28.0': {'neg': (0.6322222222222221, 1.0490730770483314), '0-1': (0.1744779582366589, 1.2570536552612126), '1-2': (-0.17716049382716054, 1.674289039878284), '2-4': (-0.4988826815642458, 1.952651508490618), '4-7': (-1.5716981132075476, 2.170981636807398), '7+': (-2.7578947368421054, 1.968252174010895)}, '29.0': {'neg': (0.6418867924528303, 1.0358936650531554), '0-1': (0.23839541547277934, 1.2779208371398338), '1-2': (-0.10864197530864199, 1.5634480358192941), '2-4': (-0.603030303030303, 1.9770018391010664), '4-7': (-1.5999999999999999, 2.1305628940761254), '7+': (-2.0799999999999996, 2.7220580449358533)}, '30.0': {'neg': (0.5651982378854626, 1.0014418373791274), '0-1': (0.20793650793650795, 1.1262385192835327), '1-2': (-0.1312977099236641, 1.7441323208375492), '2-4': (-0.7815642458100558, 1.7721135347236328), '4-7': (-1.836904761904762, 2.339809707459173), '7+': (-1.7428571428571427, 2.8404512432545155)}, '31.0': {'neg': (0.7279329608938548, 1.2348304911502928), '0-1': (0.1717948717948718, 1.2235297232039135), '1-2': (-0.22890625000000003, 1.7530844399831222), '2-4': (-0.973076923076923, 2.019308911796887), '4-7': (-1.4666666666666666, 2.295928763896844), '7+': (-2.4909090909090916, 2.5684995780892446)}, '32.0': {'neg': (0.7541899441340782, 1.0893705771793265), '0-1': (0.005241935483870971, 1.2035618936264982), '1-2': (-0.7526315789473684, 1.4562153859339766), '2-4': (-1.129710144927536, 1.9603094040131264), '4-7': (-1.8888888888888884, 2.011957201658404), '7+': (-2.969230769230769, 1.8824634495929145)}, '33.0': {'neg': (0.525625, 0.9751440198119457), '0-1': (-0.09661016949152543, 0.9911842089983919), '1-2': (-0.5197802197802198, 1.5438797838113851), '2-4': (-1.2056818181818183, 1.9111727690885993), '4-7': (-1.9600000000000002, 2.260987984635625), '7+': (-2.6, 1.7813852287849852)}, '34.0': {'neg': (0.6782608695652175, 1.0588303042067178), '0-1': (-0.019512195121951237, 1.0183725687957572), '1-2': (-0.42, 1.6666133324799728), '2-4': (-1.048148148148148, 1.5816939747953704), '4-7': (-1.8171428571428572, 1.9705670995623445), '7+': (-3.8999999999999995, 1.7236911298463864)}}
pitching_models = {'22-': {'neg': (0.9849999999999998, 1.6162533836004798), '0-1': (0.5117647058823529, 1.5769972781285684), '1-2': (0.6599999999999999, 1.4485855169785455), '2-4': (-2.0857142857142854, 1.3579696729504165), '4-7': (0, 1), '7+': (0, 1)}, '22-24': {'neg': (0.8958762886597939, 1.2709212119417732), '0-1': (0.371830985915493, 1.5298454706023423), '1-2': (0.07692307692307696, 1.7180283180946547), '2-4': (-0.43571428571428567, 2.2767009788153505), '4-7': (-0.4166666666666668, 2.0395397084200693), '7+': (0, 1)}, '35-38': {'neg': (0.8691823899371068, 1.0970486241343376), '0-1': (-0.062081784386617114, 1.016249453834599), '1-2': (-0.7825806451612903, 1.5075358397107799), '2-4': (-1.11, 1.821052809045727), '4-7': (-2.7545454545454544, 2.185640591082722), '7+': (-4.58, 2.9246538256689454)}, '38+': {'neg': (0.5678571428571428, 0.8709820284469427), '0-1': (-0.12727272727272732, 1.1531589998203142), '1-2': (-0.3999999999999999, 1.4299819875958175), '2-4': (-1.3562500000000002, 1.742113927818729), '4-7': (-2.3307692307692305, 1.8759139784216838), '7+': (0, 1)}, '24.0': {'neg': (0.8924623115577888, 1.196558493546838), '0-1': (0.24478764478764478, 1.3960789869906527), '1-2': (-0.42298850574712643, 1.5764576286853687), '2-4': (-0.9855072463768116, 2.0017583113113364), '4-7': (-1.3718750000000002, 1.9881263753531866), '7+': (0, 1)}, '25.0': {'neg': (0.9493243243243243, 1.1603818466129447), '0-1': (0.1473684210526316, 1.2943617468691617), '1-2': (-0.3446428571428571, 1.669732617908066), '2-4': (-0.9490909090909089, 2.094006401594168), '4-7': (-1.5624999999999998, 2.7433726961534046), '7+': (-0.33333333333333304, 1.3072447700751721)}, '26.0': {'neg': (0.8880645161290321, 1.0692563570669065), '0-1': (0.22634032634032633, 1.2523659234914148), '1-2': (-0.36830985915492964, 1.664855012860417), '2-4': (-0.8578512396694216, 1.9547675166080662), '4-7': (-2.108108108108108, 2.3932764354375666), '7+': (-4.609999999999999, 2.8037296588651337)}, '27.0': {'neg': (0.8611940298507463, 1.06969171509248), '0-1': (0.05888077858880776, 1.1085106348769973), '1-2': (-0.4666666666666667, 1.5718868543340778), '2-4': (-1.3311111111111111, 1.836440464661709), '4-7': (-1.856896551724138, 2.2463082409670285), '7+': (-3.9499999999999997, 2.3499999999999996)}, '28.0': {'neg': (0.74609375, 1.095687736634365), '0-1': (0.2092643051771117, 1.2586577572006228), '1-2': (-0.691907514450867, 1.4354888203312954), '2-4': (-1.0913385826771653, 1.8221741630912676), '4-7': (-2.0416666666666665, 2.4796533135814682), '7+': (-2.75, 0.7762087348130015)}, '29.0': {'neg': (0.827906976744186, 1.0411812570111532), '0-1': (0.13520710059171598, 1.2067010085241705), '1-2': (-0.6424657534246576, 1.4501693626380405), '2-4': (-1.366949152542373, 2.076097017945696), '4-7': (-1.8522727272727268, 2.1706187467636164), '7+': (-1.0333333333333334, 2.0757863302587016)}, '30.0': {'neg': (1.02280701754386, 1.1794067609552743), '0-1': (0.03928571428571428, 1.1738335504157447), '1-2': (-0.6333333333333333, 1.498570747650669), '2-4': (-0.9598214285714286, 1.8372854501288314), '4-7': (-2.0999999999999996, 2.5395619701042933), '7+': (-2.983333333333333, 1.4690321832946873)}, '31.0': {'neg': (0.9164179104477612, 1.0790538994360621), '0-1': (0.14439655172413793, 1.3356722373042538), '1-2': (-0.425, 1.4546799476173444), '2-4': (-1.4876543209876545, 1.683718893581938), '4-7': (-2.0942857142857143, 2.3937946990551406), '7+': (-1.4250000000000003, 1.6813313177360372)}, '32.0': {'neg': (0.7472727272727273, 1.0325351934049682), '0-1': (0.054736842105263125, 1.1227567971224957), '1-2': (-0.6220338983050849, 1.370150034665902), '2-4': (-1.072222222222222, 1.8758866216496004), '4-7': (-2.0799999999999996, 2.0264747716169573), '7+': (-3.4, 2.4470390270692457)}, '33.0': {'neg': (0.8064935064935065, 1.1917833044488537), '0-1': (-0.08982035928143715, 1.1646815879295704), '1-2': (-0.44065934065934065, 1.529776111032356), '2-4': (-1.1233333333333333, 1.6484706717304847), '4-7': (-2.9894736842105263, 2.2961970245654593), '7+': (-0.6999999999999997, 1.9)}, '34.0': {'neg': (0.9792207792207791, 1.1572849621955985), '0-1': (0.1586776859504132, 1.3081858880148711), '1-2': (-0.9411764705882351, 1.193885807688201), '2-4': (-1.3087719298245615, 2.0984773679440694), '4-7': (-1.6833333333333333, 1.6435902436096683), '7+': (-2.6599999999999993, 1.9022092419079457)}}


